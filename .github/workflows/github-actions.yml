name: cloud-native-calm-builds

# defaults:
#   run:
#     # Needed to load .bashrc for kubectl plugins
#     shell: bash -ieo pipefail {0}

on:
  pull_request:
    types:
      - opened
      - synchronize
      - reopened
      - ready_for_review
      - converted_to_draft
    branches:
      - main
  push:
    branches:
      - main
      - feat**
      - bug**
      - task**
    paths-ignore:
      - 'docs/**'
    tags:
      - v*
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# concurrency:
#   group: ci-tests-${{ github.ref }}-1
#   cancel-in-progress: true

concurrency: kalm-main-cicd

env:
  ### Target karbon production environment / hpoc id
  ENVIRONMENT_NAME: kalm-main-7-2

jobs:
  build-kalm-cicd-env:
    timeout-minutes: 240
    if: github.event.pull_request.draft == false
    runs-on: self-hosted
    ### COMMON_SECRET for Github Environment should be updated appropriately
    environment: kalm-main-cicd
    container:
      image: ntnxdemo/calm-dsl-utils:latest
      credentials:
        username: ${{ secrets.DOCKER_HUB_USER }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
        with:
          fetch-depth: '0'
      - name: Staging Environment Secrets
        run: |
          git config --global --add safe.directory $GITHUB_WORKSPACE
          mkdir -p .local/_common
          echo "${{ secrets.NTNX_SSH_PRIVATE_KEY }}" > .local/_common/nutanix_key
          echo "${{ secrets.NTNX_SSH_PUB_KEY }}" > .local/_common/nutanix_public_key
          cp ./secrets.yaml.example ./secrets.yaml

          MOD_DOCKER_HUB_PASS=$(echo "${{ secrets.DOCKER_HUB_PASSWORD }}" | sed 's/\W/\\&/g')
          sed -i "s/docker_hub_user: .*/docker_hub_user: ${{ secrets.DOCKER_HUB_USER }}/g" ./secrets.yaml
          sed -i "s/docker_hub_password: .*/docker_hub_password: $MOD_DOCKER_HUB_PASS/g" ./secrets.yaml

          MOD_GH_SECRET=$(echo "${{ secrets.GH_SECRET }}" | sed 's/\W/\\&/g')
          sed -i "s/github_user: .*/github_user: ${{ secrets.GH_USER }}/g" ./secrets.yaml
          sed -i "s/github_password: .*/github_password: $MOD_GH_SECRET/g" ./secrets.yaml

          MOD_COMMON_SECRET=$(echo "${{ secrets.COMMON_SECRET }}" | sed 's/\W/\\&/g')
          sed -i "s/required_secret/$MOD_COMMON_SECRET/g" ./secrets.yaml

      - name: Initialize Environment Configs
        run: |
          ./init_local_configs.sh .local/_common/nutanix_key .local/_common/nutanix_public_key $ENVIRONMENT_NAME true
          make print-vars ENVIRONMENT=$ENVIRONMENT_NAME
          env
      - name: Initialize DSL Config
        run: make init-dsl-config ENVIRONMENT=$ENVIRONMENT_NAME
      - name: Cleanup Existing Artifacts
        continue-on-error: true
        run: make bootstrap-reset-all ENVIRONMENT=$ENVIRONMENT_NAME
      - name: Provision Linux Bastion Host Endpoint
        run: make init-bastion-host-svm ENVIRONMENT=$ENVIRONMENT_NAME
      - name: Create All Helm Chart Blueprints
        run:  make create-all-helm-charts ENVIRONMENT=$ENVIRONMENT_NAME
      - name: Provision Calm Endpoints & Runbook Scenarios
        run: make init-runbook-infra ENVIRONMENT=$ENVIRONMENT_NAME
      - name: Provision NKE Karbon Production Cluster
        run: make init-kalm-cluster ENVIRONMENT=$ENVIRONMENT_NAME
      - name: Launch All Helm Charts
        run: make launch-all-helm-charts ENVIRONMENT=$ENVIRONMENT_NAME
      - name: Publish All Helm Charts & Helm Charts
        run:  make publish-all-blueprints ENVIRONMENT=$ENVIRONMENT_NAME
      - name: Cleanup & Reset Cluster
        if: success() || failure()
        run: make bootstrap-reset-all ENVIRONMENT=$ENVIRONMENT_NAME

