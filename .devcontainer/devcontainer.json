// For format details, see https://aka.ms/devcontainer.json. For config options, see the README at:
// https://github.com/microsoft/vscode-dev-containers/tree/v0.205.2/containers/docker-existing-dockerfile
{
	"name": "Nutanix Calm DSL Development Container",

	// Sets the run context to one level up instead of the .devcontainer folder.
	"context": "..",

	// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
	"dockerFile": "Dockerfile",

  // Needed for vagrant scenarios
  "runArgs": ["--tmpfs", "/tmp:exec", "--tmpfs", "/run", "-v", "/sys/fs/cgroup:/sys/fs/cgroup:ro","--cap-add=NET_ADMIN"]

	// Uncomment to 
  "mounts": [
    // Mounts the local dir to root calm dir
    "type=bind,source=${env:PWD}/.local,target=/root/.calm",
    // use the Docker CLI from inside the container. See https://aka.ms/vscode-remote/samples/docker-from-docker.
    "type=bind,source=/var/run/docker.sock,target=/var/run/docker.sock"
  ],

  // Set *default* container specific settings.json values on container create.
  "settings": {
    "terminal.integrated.shell.linux": "/bin/bash"
  },
	
	// Use 'forwardPorts' to make a list of ports inside the container available locally.
	// "forwardPorts": [],

	// Uncomment the next line to run commands after the container is created - for example installing curl.
	"postCreateCommand": "make help",

	// Uncomment when using a ptrace-based debugger like C++, Go, and Rust
	// "runArgs": [ "--cap-add=SYS_PTRACE", "--security-opt", "seccomp=unconfined" ],

	// Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "hashicorp.terraform"
  ],

  // Use 'postCreateCommand' to run commands after the container is created.
  //"postCreateCommand": "sudo chown -R $(whoami) ~/",

  "workspaceFolder": "/docker-workspace"
}
